{"version":3,"file":"static/js/117.0353db60.chunk.js","mappings":"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","sources":["components/Posts/Compilations.js","components/Posts/PostsList.js","pages/Posts.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport postsData from '../../data/posts/posts.json';\nimport compilationData from '../../data/posts/compilations.json';\n\nconst Compilations = () => {\n  const categories = postsData.reduce((acc, post) => {\n    const category = post.category || 'Uncategorized';\n    if (!acc[category]) acc[category] = [];\n    acc[category].push(post);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"compilations\">\n      <div className=\"link-to\" id=\"compilations\" />\n      <div className=\"title\">\n        <h2>Compilations</h2>\n      </div>\n      <div className=\"compilation-container\">\n        {Object.entries(categories).map(([category]) => {\n          const compilation = compilationData.find(\n            (cat) => cat.title.trim().toLowerCase() === category.trim().toLowerCase(),\n          );\n          return (\n            <nav className=\"links\">\n              <div className=\"compilation-box\">\n                <Link to=\"/\">\n                  <h3>{category}</h3>\n                  <p>{compilation ? compilation.description : 'No description available.'}</p>\n                </Link>\n              </div>\n            </nav>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Compilations;\n","// PostsList.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport postsData from '../../data/posts/posts.json'; // Import the JSON data\n\nconst PostsList = () => (\n  <div className=\"postslist\">\n    <div className=\"link-to\" id=\"postslist\" />\n    <div className=\"title\">\n      <h2>Posts</h2>\n    </div>\n    {// sort posts by date in descending order\n      postsData.sort((a, b) => new Date(b.date) - new Date(a.date)).map((post) => (\n        <div className=\"postbox\" key={post.id}>\n          <nav className=\"links\">\n            <Link to={`/post/${post.id}`}>\n              <h3>{post.title}</h3>\n              <h4 className=\"category\">{post.category}</h4>\n              <h4 className=\"date\">{post.date}</h4>\n              <p>{post.excerpt}</p>\n            </Link>\n          </nav>\n        </div>\n      ))\n    }\n  </div>\n);\n\nexport default PostsList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Main from '../layouts/Main';\nimport Compilations from '../components/Posts/Compilations';\nimport PostsList from '../components/Posts/PostsList';\n\n// Define the sections as components directly\nconst sections = {\n  Compilations: () => <Compilations />,\n  PostsList: () => <PostsList />,\n};\n\nconst handleSectionClick = (sectionId, e) => {\n  e.preventDefault();\n  const element = document.getElementById(sectionId);\n  if (element) {\n    element.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\nconst Posts = () => (\n  <Main title=\"Posts\" description=\"posts on various topics\">\n    <article className=\"pagepost\" id=\"posts\">\n      <header>\n        <div className=\"title\">\n          <h2>\n            <Link to=\"/posts\">Posts</Link>\n          </h2>\n          <div className=\"link-container\">\n            {Object.keys(sections).map((sec) => (\n              <h4 key={sec}>\n                <a\n                  href={`#${sec.toLowerCase()}`}\n                  onClick={(e) => handleSectionClick(sec.toLowerCase(), e)}\n                >{sec}\n                </a>\n              </h4>\n            ))}\n          </div>\n        </div>\n      </header>\n      {Object.entries(sections).map(([name, Section]) => (\n        name === 'Compilations' ? (\n          <React.Fragment key={name}>\n            <Section />\n            <hr className=\"section-divider\" />\n          </React.Fragment>\n        ) : (\n          <Section key={name} />\n        )\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Posts;\n"],"names":["Compilations","categories","postsData","reduce","acc","post","category","push","_jsxs","className","children","_jsx","id","Object","entries","map","_ref","compilation","compilationData","find","cat","title","trim","toLowerCase","Link","to","description","PostsList","sort","a","b","Date","date","excerpt","sections","Posts","Main","keys","sec","href","onClick","e","handleSectionClick","sectionId","preventDefault","element","document","getElementById","scrollIntoView","behavior","name","Section","React"],"sourceRoot":""}