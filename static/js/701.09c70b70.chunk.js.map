{"version":3,"file":"static/js/701.09c70b70.chunk.js","mappings":"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","sources":["constants/index.js","pages/contacts/styles/contacts.js","pages/contacts/index.jsx"],"sourcesContent":["export const EMAIL_VALIDATE_REGX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n","import { makeStyles, TextField, withStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n  contactContainer: {\n    height: '100vh',\n  },\n  heading: {\n    color: 'tomato',\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    marginBottom: '1rem',\n  },\n  form: {\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    position: 'absolute',\n  },\n  input: {\n    color: '#fff',\n  },\n  button: {\n    marginTop: '1rem',\n    color: 'tomato',\n    borderColor: 'tan',\n    '&:disabled': {\n      color: 'grey',\n      borderColor: 'grey',\n      cursor: 'not-allowed',\n    },\n  },\n  field: {\n    margin: '1rem 0rem',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport const InputField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'tomato',\n    },\n    '& label': {\n      color: 'tan',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'tan',\n      },\n      '&:hover fieldset': {\n        borderColor: 'tan',\n      },\n      '&.Mui-focused fieldset': {\n        color: '#fff',\n        borderColor: 'tan',\n      },\n    },\n  },\n})(TextField);\n","import { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { Send } from '@material-ui/icons';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Oval } from 'react-loader-spinner';\n\nimport { EMAIL_VALIDATE_REGX } from '../../constants';\nimport { InputField, useStyles } from './styles/contacts';\n\nconst isValidEmail = (email) => {\n  return EMAIL_VALIDATE_REGX.test(email);\n};\n\nconst Contact = () => {\n  const classes = useStyles();\n  const url = 'https://formspree.io/f/xgepkqol';\n\n  const [clientInfo, setClientInfo] = useState({\n    os: '',\n    userAgent: '',\n    ipinfo: {},\n  });\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {};\n\n    if (formData.name.trim() === '') {\n      newErrors.name = 'Name is required';\n      isValid = false;\n    }\n\n    if (formData.email.trim() === '') {\n      newErrors.email = 'Email is required';\n      isValid = false;\n    } else if (!isValidEmail(formData.email)) {\n      newErrors.email = 'Invalid email address';\n      isValid = false;\n    }\n\n    if (formData.message.trim() === '') {\n      newErrors.message = 'Message is required';\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    validateForm();\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      if (validateForm()) {\n        const data = new FormData();\n        data.append('name', formData.name);\n        data.append('email', formData.email);\n        data.append('message', formData.message);\n        data.append('clientInfo', JSON.stringify(clientInfo));\n        await axios({\n          method: 'post',\n          url,\n          data,\n        });\n        toast.success('Message sent successfully');\n        setFormData({\n          name: '',\n          email: '',\n          message: '',\n        });\n      }\n    } catch (error) {\n      toast.error('Message failed to send');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const os = navigator.platform;\n    const userAgent = navigator.userAgent;\n\n    setClientInfo((prev) => ({\n      ...prev,\n      os,\n      userAgent,\n    }));\n\n    axios\n      .post('https://api2.ip8.com/ip/info')\n      .then((data) => {\n        setClientInfo((prev) => ({\n          ...prev,\n          ipinfo: data,\n        }));\n      })\n      .catch((error) => {\n        console.error('Error getting IP and location:', error);\n      });\n  }, []);\n\n  return (\n    <Box component=\"div\" className={classes.contactContainer}>\n      <Grid container justify=\"center\">\n        <Box component=\"div\" className={classes.form}>\n          <Typography variant=\"h5\" className={classes.heading}>\n            Get in touch\n          </Typography>\n          <form onSubmit={handleOnSubmit}>\n            <InputField\n              fullWidth={true}\n              label=\"Name\"\n              variant=\"outlined\"\n              name=\"name\"\n              inputProps={{ className: classes.input }}\n              value={formData.name}\n              onChange={handleInputChange}\n              error={!!errors.name}\n              helperText={errors.name}\n            />\n            <InputField\n              fullWidth={true}\n              label=\"Email\"\n              variant=\"outlined\"\n              name=\"email\"\n              inputProps={{ className: classes.input }}\n              className={classes.field}\n              value={formData.email}\n              onChange={handleInputChange}\n              error={!!errors.email}\n              helperText={errors.email}\n            />\n            <InputField\n              fullWidth={true}\n              label=\"Message\"\n              variant=\"outlined\"\n              name=\"message\"\n              multiline\n              rows={4}\n              inputProps={{ className: classes.input }}\n              value={formData.message}\n              onChange={handleInputChange}\n              error={!!errors.message}\n              helperText={errors.message}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              fullWidth={true}\n              endIcon={!loading && <Send />}\n              className={classes.button}\n              disabled={loading}\n            >\n              {loading ? (\n                <Oval\n                  height={25}\n                  width={25}\n                  color=\"tomato\"\n                  visible={true}\n                  ariaLabel=\"oval-loading\"\n                  secondaryColor=\"#250220\"\n                  strokeWidth={2}\n                  strokeWidthSecondary={2}\n                />\n              ) : (\n                'Contact Me'\n              )}\n            </Button>\n          </form>\n        </Box>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Contact;\n"],"names":["EMAIL_VALIDATE_REGX","useStyles","makeStyles","theme","contactContainer","height","heading","color","textAlign","textTransform","marginBottom","form","top","left","transform","position","input","button","marginTop","borderColor","cursor","field","margin","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","InputField","withStyles","root","TextField","Contact","classes","clientInfo","setClientInfo","useState","os","userAgent","ipinfo","loading","setLoading","formData","setFormData","name","email","message","errors","setErrors","validateForm","isValid","newErrors","trim","test","handleInputChange","e","value","target","useEffect","navigator","platform","prev","axios","post","then","data","catch","error","console","_jsx","Box","component","className","children","Grid","container","justify","_jsxs","Typography","variant","onSubmit","async","preventDefault","FormData","append","JSON","stringify","method","url","toast","success","fullWidth","label","inputProps","onChange","helperText","multiline","rows","Button","type","endIcon","Send","disabled","Oval","width","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary"],"sourceRoot":""}